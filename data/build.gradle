apply plugin: 'com.android.library'

android {
    def globalConfiguration = rootProject.extensions["ext"]

    compileSdkVersion globalConfiguration["compileSdkVersion"]
    buildToolsVersion globalConfiguration["buildToolsVersion"]

    defaultConfig {
        minSdkVersion globalConfiguration["minSdkVersion"]
        targetSdkVersion globalConfiguration["targetSdkVersion"]
        versionCode globalConfiguration["versionCode"]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    lintOptions {
        quiet true
        abortOnError false
        ignoreWarnings true
        disable 'InvalidPackage'  // Some libraries have issues with this
        disable 'OldTargetApi'    // Due to Robolectric that modifies the manifest when running tests
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    def dataDependencies = rootProject.ext.dataDependencies

    implementation project(':domain')

    compileOnly dataDependencies.javaxAnnotation
    implementation dataDependencies.javaxInject
    implementation dataDependencies.androidAnnotations
    implementation dataDependencies.retrofit
    implementation dataDependencies.retrofitGsonConverter
    implementation dataDependencies.retrofitRxjava2Apadter
}
